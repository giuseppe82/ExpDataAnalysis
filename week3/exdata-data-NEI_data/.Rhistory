png("./plot1.png", width = 650, height = 480)
par(mar=c(2,3,2,2)+0.1)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
ylim = c(0e+00, 7e+06),
axis.lty = 0,
main = expression('Total PM'[2.5]*' emissions in the USA, 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
png("./plot1.png", width = 650, height = 480)
par(mar=c(8,3,2,2)+0.1)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
ylim = c(0e+00, 7e+06),
axis.lty = 0,
main = expression('Total PM'[2.5]*' emissions in the USA, 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
png("./plot1.png", width = 650, height = 480)
par(mar=c(5,5,2,2)+0.1)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
ylim = c(0e+00, 7e+06),
axis.lty = 0,
main = expression('Total PM'[2.5]*' emissions in the USA, 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
png("./plot1.png", width = 650, height = 480)
par(mar=c(3,5,2,2)+0.1)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
ylim = c(0e+00, 7e+06),
axis.lty = 0,
main = expression('Total PM'[2.5]*' emissions in the USA, 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
png("./plot1.png", width = 650, height = 480)
par(mar=c(5,5,5,2)+0.1)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
ylim = c(0e+00, 7e+06),
axis.lty = 0,
main = expression('Total PM'[2.5]*' emissions in the USA, 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
png("./plot1.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
ylim = c(0e+00, 7e+06),
axis.lty = 0,
main = expression('Total PM'[2.5]*' emissions in the USA, 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
# Course Project 2.
# 2. Have total emissions from PM2.5 decreased in the Baltimore City,
# Maryland ( fips == "24510" ) from 1999 to 2008?
# Use the base plotting system to make a plot answering this question.
# Script Name: plot2.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
library(dplyr)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# 1st: let's create a subset, corresponding to the emissions records
# only in the Baltimore City, MD
NEI.subset <- NEI[NEI$fips == "24510",]
EM <- NEI.subset$Emissions  # numeric vector of emissions
YR <- NEI.subset$year       # numeric vector of years
# a convenient "new" data frame
Data <- data.frame(cbind(YR, EM), stringsAsFactors = FALSE)
# let's apply some filtering.
PM1999 <- Data[Data$YR == 1999, ] # data frame, corresponding to the emissions in 1999
PM2002 <- Data[Data$YR == 2002, ] # """           """        """         """      2002
PM2005 <- Data[Data$YR == 2005, ] # """           """        """         """      2005
PM2008 <- Data[Data$YR == 2008, ] # """           """        """         """      2008
years <- cbind(1999,2002,2005,2008)
total_emissions <- cbind(sum(PM1999$EM), sum(PM2002$EM), sum(PM2005$EM), sum(PM2008$EM))
png("./plot2.png", width = 640, height = 480)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
main = expression('Total PM'[2.5]*' emissions in the Baltimore City (MD)'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
# Course Project 2.
# 2. Have total emissions from PM2.5 decreased in the Baltimore City,
# Maryland ( fips == "24510" ) from 1999 to 2008?
# Use the base plotting system to make a plot answering this question.
# Script Name: plot2.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
library(dplyr)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# 1st: let's create a subset, corresponding to the emissions records
# only in the Baltimore City, MD
NEI.subset <- NEI[NEI$fips == "24510",]
EM <- NEI.subset$Emissions  # numeric vector of emissions
YR <- NEI.subset$year       # numeric vector of years
# a convenient "new" data frame
Data <- data.frame(cbind(YR, EM), stringsAsFactors = FALSE)
# let's apply some filtering.
PM1999 <- Data[Data$YR == 1999, ] # data frame, corresponding to the emissions in 1999
PM2002 <- Data[Data$YR == 2002, ] # """           """        """         """      2002
PM2005 <- Data[Data$YR == 2005, ] # """           """        """         """      2005
PM2008 <- Data[Data$YR == 2008, ] # """           """        """         """      2008
years <- cbind(1999,2002,2005,2008)
total_emissions <- cbind(sum(PM1999$EM), sum(PM2002$EM), sum(PM2005$EM), sum(PM2008$EM))
png("./plot2.png", width = 640, height = 480)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
main = expression('Total PM'[2.5]*' emissions in the Baltimore City (MD)'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
# Course Project 2.
# 2. Have total emissions from PM2.5 decreased in the Baltimore City,
# Maryland ( fips == "24510" ) from 1999 to 2008?
# Use the base plotting system to make a plot answering this question.
# Script Name: plot2.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
library(dplyr)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# 1st: let's create a subset, corresponding to the emissions records
# only in the Baltimore City, MD
NEI.subset <- NEI[NEI$fips == "24510",]
EM <- NEI.subset$Emissions  # numeric vector of emissions
YR <- NEI.subset$year       # numeric vector of years
# a convenient "new" data frame
Data <- data.frame(cbind(YR, EM), stringsAsFactors = FALSE)
# let's apply some filtering.
PM1999 <- Data[Data$YR == 1999, ] # data frame, corresponding to the emissions in 1999
PM2002 <- Data[Data$YR == 2002, ] # """           """        """         """      2002
PM2005 <- Data[Data$YR == 2005, ] # """           """        """         """      2005
PM2008 <- Data[Data$YR == 2008, ] # """           """        """         """      2008
years <- cbind(1999,2002,2005,2008)
total_emissions <- cbind(sum(PM1999$EM), sum(PM2002$EM), sum(PM2005$EM), sum(PM2008$EM))
png("./plot2.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
main = expression('Total PM'[2.5]*' emissions in the Baltimore City (MD)'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
# Course Project 2.
# 3. Of the four types of sources indicated by the type
# (point, nonpoint, onroad, nonroad) variable, which of these
# four sources have seen decreases in emissions from 1999–2008 for Baltimore City?
# Which have seen increases in emissions from 1999–2008?
# Use the ggplot2 plotting system to make a plot answer this question.
# Script Name: plot3.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
library(dplyr)
# Load the ggplot2 package
library(ggplot2)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# e.g. NEI$type  to quickly explore the types of source variables
# 1st: let's create a subset, corresponding to the emissions records
# only in the Baltimore city, MD. We use the filter() function, to select on rows
NEI.subset <- filter(NEI, fips == "24510")
# alternative way to proceed
# NEI.subset <- NEI[NEI$fips == "24510",]
# str(NEI.subset)
# PM.point <- NEI.subset[NEI.subset$type == "POINT", ]
# PM.nonpoint <- NEI.subset[NEI.subset$type == "NONPOINT", ]
# PM.onroad <- NEI.subset[NEI.subset$type == "ON-ROAD", ]
# PM.nonroad <- NEI.subset[NEI.subset$type == "NON-ROAD", ]
# ... but too long
# Better, to use the features of ggplot2
# These are the variable mappings used here:
# year: x-axis
# type: line color
# total emissions
png("./plot3.png", width = 640, height = 480)
g <- ggplot(data = NEI.subset, aes(x = year, y = Emissions, color = type))
g <- g + geom_line(stat = "summary" , fun.y = "sum", size = 1.5)
g <- g + theme(axis.text = element_text(size=13))
g <- g + xlab("Years")
g <- g + ylab(expression('total PM'[2.5]*' emissions (tons)'))
g <- g + theme(axis.title.x = element_text(size=13))
g <- g + theme(axis.title.y = element_text(size=13))
g <- g + ggtitle(expression('Total PM'[2.5]*' emissions in the Baltimore City (MD), per type of source'))
g <- g + theme(plot.title = element_text(lineheight=3, face="bold", color="black", size = 15))
# stat_summary allows for tremendous flexibilty in the specification of summary
# functions. The summary function can either operate on a data frame
# (with argument name fun.data) or on a vector (fun.y, fun.ymax, fun.ymin).
print(g)
dev.off()
png("./plot3.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
g <- ggplot(data = NEI.subset, aes(x = year, y = Emissions, color = type))
g <- g + geom_line(stat = "summary" , fun.y = "sum", size = 1.5)
g <- g + theme(axis.text = element_text(size=15))
g <- g + xlab("Years")
g <- g + ylab(expression('total PM'[2.5]*' emissions (tons)'))
g <- g + theme(axis.title.x = element_text(size=15))
g <- g + theme(axis.title.y = element_text(size=15))
g <- g + ggtitle(expression('Total PM'[2.5]*' emissions in the Baltimore City (MD), per type of source'))
g <- g + theme(plot.title = element_text(lineheight=3, face="bold", color="black", size = 15))
# stat_summary allows for tremendous flexibilty in the specification of summary
# functions. The summary function can either operate on a data frame
# (with argument name fun.data) or on a vector (fun.y, fun.ymax, fun.ymin).
print(g)
dev.off()
png("./plot3.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
g <- ggplot(data = NEI.subset, aes(x = year, y = Emissions, color = type))
g <- g + geom_line(stat = "summary" , fun.y = "sum", size = 1.5)
g <- g + theme(axis.text = element_text(size=16))
g <- g + xlab("Years")
g <- g + ylab(expression('total PM'[2.5]*' emissions (tons)'))
g <- g + theme(axis.title.x = element_text(size=16))
g <- g + theme(axis.title.y = element_text(size=16))
g <- g + ggtitle(expression('Total PM'[2.5]*' emissions in the Baltimore City (MD), per type of source'))
g <- g + theme(plot.title = element_text(lineheight=3, face="bold", color="black", size = 16))
# stat_summary allows for tremendous flexibilty in the specification of summary
# functions. The summary function can either operate on a data frame
# (with argument name fun.data) or on a vector (fun.y, fun.ymax, fun.ymin).
print(g)
dev.off()
png("./plot3.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
g <- ggplot(data = NEI.subset, aes(x = year, y = Emissions, color = type))
g <- g + geom_line(stat = "summary" , fun.y = "sum", size = 1.5)
g <- g + theme(axis.text = element_text(size=16))
g <- g + xlab("Years")
g <- g + ylab(expression('total PM'[2.5]*' emissions (tons)'))
g <- g + theme(axis.title.x = element_text(size=16))
g <- g + theme(axis.title.y = element_text(size=16))
g <- g + ggtitle(expression('Total PM'[2.5]*' emissions (per type of sources) in the Baltimore City (MD)'))
g <- g + theme(plot.title = element_text(lineheight=3, face="bold", color="black", size = 16))
# stat_summary allows for tremendous flexibilty in the specification of summary
# functions. The summary function can either operate on a data frame
# (with argument name fun.data) or on a vector (fun.y, fun.ymax, fun.ymin).
print(g)
dev.off()
png("./plot3.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
g <- ggplot(data = NEI.subset, aes(x = year, y = Emissions, color = type))
g <- g + geom_line(stat = "summary" , fun.y = "sum", size = 1.5)
g <- g + theme(axis.text = element_text(size=16))
g <- g + xlab("Years")
g <- g + ylab(expression('total PM'[2.5]*' emissions (tons)'))
g <- g + theme(axis.title.x = element_text(size=16))
g <- g + theme(axis.title.y = element_text(size=16))
g <- g + ggtitle(expression('Total PM'[2.5]*' emissions (per type of sources) in the Baltimore City (MD), 1999 - 2008'))
g <- g + theme(plot.title = element_text(lineheight=3, face="bold", color="black", size = 16))
# stat_summary allows for tremendous flexibilty in the specification of summary
# functions. The summary function can either operate on a data frame
# (with argument name fun.data) or on a vector (fun.y, fun.ymax, fun.ymin).
print(g)
dev.off()
png("./plot2.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
barplot(total_emissions, width = 1, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
main = expression('Total PM'[2.5]*' emissions in the Baltimore City (MD), 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' emissions (tons)'),
horiz = FALSE, names.arg = years
)
dev.off()
# Course Project 2.
# 4. Across the United States, how have emissions from coal combustion-related
# sources changed from 1999–2008?
# Script Name: plot4.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
library(dplyr)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
emission.names <- SCC$Short.Name
# let's find the indexes corresponding to
# emissions from coal combustion-related sources.
coal.indexes <- grep("coal", emission.names, ignore.case = TRUE)
# mapping the SCC digit strings corresponding to coal combustion-related sources
SCC.coal <- SCC[coal.indexes, ]
# select, in NEI, all the emissions corresponding to coal combustion-related sources
NEI.coal <- NEI[NEI$SCC %in% SCC.coal$SCC, ]
emissions.duetocoal <- aggregate(Emissions ~ year, NEI.coal, sum)
# as an alternative, you can use the ddply() function.
# e.g. ddply(NEI.coal, .(year), function(x) sum(x$Emissions))
png("./plot4.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
barplot(emissions.duetocoal$Emissions, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
main = expression('Total Emissions from coal sources in the USA, 1999-2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' coal-related emissions (tons)'),
horiz = FALSE, names.arg = emissions.duetocoal$year
)
dev.off()
# Course Project 2.
# 4. Across the United States, how have emissions from coal combustion-related
# sources changed from 1999–2008?
# Script Name: plot4.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
library(dplyr)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
emission.names <- SCC$Short.Name
# let's find the indexes corresponding to
# emissions from coal combustion-related sources.
coal.indexes <- grep("coal", emission.names, ignore.case = TRUE)
# mapping the SCC digit strings corresponding to coal combustion-related sources
SCC.coal <- SCC[coal.indexes, ]
# select, in NEI, all the emissions corresponding to coal combustion-related sources
NEI.coal <- NEI[NEI$SCC %in% SCC.coal$SCC, ]
emissions.duetocoal <- aggregate(Emissions ~ year, NEI.coal, sum)
# as an alternative, you can use the ddply() function.
# e.g. ddply(NEI.coal, .(year), function(x) sum(x$Emissions))
png("./plot4.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
barplot(emissions.duetocoal$Emissions, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
main = expression('Total Emissions from coal sources in the USA, 1999-2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' coal-related emissions (tons)'),
horiz = FALSE, names.arg = emissions.duetocoal$year
)
dev.off()
# Course Project 2.
# 4. Across the United States, how have emissions from coal combustion-related
# sources changed from 1999–2008?
# Script Name: plot5.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
library(dplyr)
# Load the ggplot2 package
#library(ggplot2)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# 1st: let's create a subset corresponding to the emissions records
# only in the Baltimore city, MD. We use the filter() function, to select on rows
NEI.subset <- filter(NEI, fips == "24510")
# 2nd: let's find the indexes corresponding to
# emissions from motor vehicle sources only.
# Searching in Short.Name with grep motor|vehicle
# returns missing info, I think.
emission.names <- SCC$EI.Sector
motor.indexes <- grep("vehicle|motor", emission.names, ignore.case = TRUE)
# mapping the SCC digit strings corresponding to motor vehicle sources
SCC.motor <- SCC[motor.indexes, ]
# head(SCC.motor)
# select, in NEI, all the emissions corresponding to motor vehicle sources
NEI.motor <- NEI.subset[NEI.subset$SCC %in% SCC.motor$SCC, ]
emissions.duetomotor <- aggregate(Emissions ~ year, NEI.motor, sum)
str(emissions.duetomotor)
png("./plot5.png", width = 640, height = 480)
par(mar=c(5,5,5,2)+0.1)
barplot(emissions.duetomotor$Emissions, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
main = expression('Total Emissions from motor vehicles in the Baltimore City (MD), 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' motor-related emissions (tons)'),
horiz = FALSE, names.arg = emissions.duetomotor$year
)
dev.off()
png("./plot5.png", width = 640, height = 480)
par(mar=c(5,5,5,5)+0.1)
barplot(emissions.duetomotor$Emissions, col = "wheat",
cex = 1.5, cex.main = 1.5, cex.axis = 1.5,
cex.lab = 1.5,
main = expression('Total Emissions from motor vehicles in the Baltimore City (MD), 1999 - 2008'),
xlab = "Years", ylab = expression('total PM'[2.5]*' motor-related emissions (tons)'),
horiz = FALSE, names.arg = emissions.duetomotor$year
)
dev.off()
# Course Project 2.
# 6. Compare emissions from motor vehicle sources
# in Baltimore City with emissions from motor vehicle sources
# in Los Angeles County, California ( fips == "06037" ).
# Which city has seen greater changes over time in motor vehicle emissions?
# Script Name: plot6.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
# Load the ggplot2 package
library(ggplot2)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# 1st: let's create a subset corresponding to the emissions records
# in the Baltimore city (MD), and/or Los Angeles (CA).
# We use the filter() function, to select on rows
NEI.subset <- filter(NEI, fips == "24510" | fips == "06037")
# 2nd: let's find the indexes corresponding to
# emissions from motor vehicle sources only.
emission.names <- SCC$EI.Sector
motor.indexes <- grep("vehicle|motor", emission.names, ignore.case = TRUE)
# mapping the SCC digit strings corresponding to motor vehicle sources
SCC.motor <- SCC[motor.indexes, ]
# select, in NEI.subset data frames, all the emissions corresponding to
# motor vehicle-related sources
NEI.motor <- NEI.subset[NEI.subset$SCC %in% SCC.motor$SCC, ]
# renames the fips variables
NEI.motor$fips[NEI.motor$fips=="24510"] <- "Baltimore (MD)"
NEI.motor$fips[NEI.motor$fips=="06037"] <- "Los Angeles (CA)"
# let's use the ggplot2 features
png("./plot6.png", width = 1040, height = 480)
par(mar=c(5,5,5,2)+0.1)
g <- ggplot(data = NEI.motor, aes(x = factor(year), y = Emissions, fill = Emissions))
g <- g + facet_grid(. ~ fips)
g <- g + geom_bar(stat = "summary" , fun.y = "sum", size = 1.5)
g <- g + theme(axis.text = element_text(size=16))
g <- g + xlab("Years")
g <- g + ylab(expression('total PM'[2.5]*' emissions (tons)'))
g <- g + theme(axis.title.x = element_text(size=16))
g <- g + theme(axis.title.y = element_text(size=16))
g <- g + ggtitle(expression('Total PM'[2.5]*' emissions in the Baltimore City (MD), and Los Angeles (CA), from motor vehicles, 1999-2008'))
g <- g + theme(plot.title = element_text(lineheight=3, face="bold", color="black", size = 16))
print(g)
dev.off()
# Course Project 2.
# 6. Compare emissions from motor vehicle sources
# in Baltimore City with emissions from motor vehicle sources
# in Los Angeles County, California ( fips == "06037" ).
# Which city has seen greater changes over time in motor vehicle emissions?
# Script Name: plot6.R
setwd(dir = "/Users/joedibernardo/Projects/DATASCIENCE/ExploratoryDataAnalysis/week3/exdata-data-NEI_data")
# Load the ggplot2 package
library(ggplot2)
if(!exists("NEI")){
NEI <- readRDS("summarySCC_PM25.rds")
}
if(!exists("SCC")){
SCC <- readRDS("Source_Classification_Code.rds")
}
# 1st: let's create a subset corresponding to the emissions records
# in the Baltimore city (MD), and/or Los Angeles (CA).
# We use the filter() function, to select on rows
NEI.subset <- filter(NEI, fips == "24510" | fips == "06037")
# 2nd: let's find the indexes corresponding to
# emissions from motor vehicle sources only.
emission.names <- SCC$EI.Sector
motor.indexes <- grep("vehicle|motor", emission.names, ignore.case = TRUE)
# mapping the SCC digit strings corresponding to motor vehicle sources
SCC.motor <- SCC[motor.indexes, ]
# select, in NEI.subset data frames, all the emissions corresponding to
# motor vehicle-related sources
NEI.motor <- NEI.subset[NEI.subset$SCC %in% SCC.motor$SCC, ]
# renames the fips variables
NEI.motor$fips[NEI.motor$fips=="24510"] <- "Baltimore (MD)"
NEI.motor$fips[NEI.motor$fips=="06037"] <- "Los Angeles (CA)"
# let's use the ggplot2 features
png("./plot6.png", width = 1040, height = 480)
par(mar=c(5,5,5,2)+0.1)
g <- ggplot(data = NEI.motor, aes(x = factor(year), y = Emissions, fill = Emissions))
g <- g + facet_grid(. ~ fips)
g <- g + geom_bar(stat = "summary" , fun.y = "sum", size = 1.5)
g <- g + theme(axis.text = element_text(size=18))
g <- g + xlab("Years")
g <- g + ylab(expression('total PM'[2.5]*' emissions (tons)'))
g <- g + theme(axis.title.x = element_text(size=16))
g <- g + theme(axis.title.y = element_text(size=16))
g <- g + ggtitle(expression('Total PM'[2.5]*' emissions in the Baltimore City (MD), and Los Angeles (CA), from motor vehicles, 1999-2008'))
g <- g + theme(plot.title = element_text(lineheight=3, face="bold", color="black", size = 16))
print(g)
dev.off()
